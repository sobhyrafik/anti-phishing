import Navbar from '@/Components/Navbar';
import { Head } from '@inertiajs/react';
import { useRef, useEffect } from 'react';
import { motion } from 'framer-motion';
import { useMalwareStore } from '@/stores';

export default function MalwareDetection() {
    const fileInputRef = useRef(null);

    // Zustand store
    const {
        file,
        dragging,
        loading,
        result,
        scanData,
        fromCache,
        scanTime,
        fileName,
        fileSize,
        jobId,
        progress,
        statusMessage,
        cancelling,
        scanMode,
        fileHash,
        statusCheckInterval,
        // Actions
        setDragging,
        setScanMode,
        setFileHash,
        processFile,
        handleFileChange,
        handleDragOver,
        handleDragLeave,
        handleDrop,
        handleScan,
        handleCancel,
        validateHash
    } = useMalwareStore();

    // Clear interval on unmount
    useEffect(() => {
        return () => {
            if (statusCheckInterval) {
                clearInterval(statusCheckInterval);
            }
        };
    }, [statusCheckInterval]);

    // Helper function for hash input
    const handleHashChange = (e) => {
        setFileHash(e.target.value);
    };




    // Animation Variants
    const cardVariants = {
        hidden: { opacity: 0, y: 50, scale: 0.95 },
        visible: { opacity: 1, y: 0, scale: 1, transition: { duration: 0.8, ease: 'easeOut' } },
    };

    const resultVariants = {
        hidden: { opacity: 0, y: 20 },
        visible: { opacity: 1, y: 0, transition: { duration: 0.5, ease: 'easeOut' } },
    };

    return (
        <div className="min-h-screen bg-gray-900 text-white">
            <Head title="Malware Detection - AntiPhishing Command" />

            {/* Navbar */}
            <Navbar />

            {/* Main Content */}
            <div className="pt-20 pb-16 min-h-screen bg-gradient-to-br from-gray-900 via-purple-950 to-blue-900 flex items-center justify-center relative overflow-hidden">
                {/* Background Effects */}
                <div className="absolute inset-0 pointer-events-none">
                    <div className="w-96 h-96 bg-purple-500/10 rounded-full absolute top-0 left-0 blur-3xl animate-pulse"></div>
                    <div className="w-80 h-80 bg-blue-500/10 rounded-full absolute bottom-0 right-0 blur-3xl animate-pulse delay-1000"></div>
                </div>

                <motion.div
                    className="mx-auto max-w-5xl px-4 sm:px-6 lg:px-8 relative z-10"
                    initial="hidden"
                    animate="visible"
                    variants={cardVariants}
                >
                    <div className="bg-gray-800/90 backdrop-blur-md shadow-2xl rounded-2xl border border-purple-500/30 p-8">
                        {/* Top Accent Bar */}
                        <div className="absolute top-0 left-0 w-full h-2 bg-gradient-to-r from-purple-600 to-blue-900" />

                        {/* Header */}
                        <div className="flex items-center space-x-6 mb-8">
                            <img
                                src="/assets/Eye.png"
                                alt="Eye Icon"
                                className="w-20 h-20 object-contain mt-2"
                            />
                            <h1 className="text-4xl font-extrabold text-white tracking-tight">
                                Malware Detection
                            </h1>
                        </div>

                        {/* Description */}
                        <p className="mt-4 text-lg text-purple-200 leading-relaxed max-w-prose font-mono">
                            Upload a file to analyze for potential malware threats using our advanced scanning engine powered by VirusTotal. We'll check the file across multiple antivirus engines to ensure maximum security.
                        </p>

                        {/* File Upload */}
                        <div className="mt-10 space-y-6">
                            {/* Scan Mode Toggle */}
                            <div className="flex justify-center mb-4">
                                <div className="inline-flex rounded-md shadow-sm border border-purple-500/30 p-1">
                                    <button
                                        onClick={() => setScanMode('file')}
                                        className={`px-4 py-2 rounded-md text-sm font-medium transition ${
                                            scanMode === 'file'
                                                ? 'bg-purple-500/20 text-purple-300'
                                                : 'text-gray-300 hover:bg-purple-500/10'
                                        }`}
                                    >
                                        Upload File
                                    </button>
                                    <button
                                        onClick={() => setScanMode('hash')}
                                        className={`px-4 py-2 rounded-md text-sm font-medium transition ${
                                            scanMode === 'hash'
                                                ? 'bg-purple-500/20 text-purple-300'
                                                : 'text-gray-300 hover:bg-purple-500/10'
                                        }`}
                                    >
                                        Scan by Hash
                                    </button>
                                </div>
                            </div>

                            {scanMode === 'file' ? (
                                // File upload UI
                                <div
                                    className={`border-2 border-dashed p-8 rounded-xl flex flex-col items-center justify-center cursor-pointer transition-all duration-300 ${
                                        dragging
                                            ? 'border-purple-500 bg-purple-500/10'
                                            : 'border-purple-500/30 hover:border-purple-500/60 hover:bg-purple-500/5'
                                    }`}
                                    onDragOver={handleDragOver}
                                    onDragLeave={handleDragLeave}
                                    onDrop={handleDrop}
                                    onClick={() => fileInputRef.current.click()}
                                >
                                    <input
                                        ref={fileInputRef}
                                        type="file"
                                        className="hidden"
                                        onChange={handleFileChange}
                                        disabled={loading}
                                    />

                                    <svg
                                        className={`w-16 h-16 mb-4 ${
                                            dragging ? 'text-purple-400' : 'text-purple-400/60'
                                        }`}
                                        fill="none"
                                        stroke="currentColor"
                                        viewBox="0 0 24 24"
                                    >
                                        <path
                                            strokeLinecap="round"
                                            strokeLinejoin="round"
                                            strokeWidth={1.5}
                                            d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"
                                        />
                                    </svg>

                                    <p className="text-lg font-medium text-purple-300 mb-2">
                                        {fileName ? fileName : "Drag and drop file or click to browse"}
                                    </p>
                                    
                                    {fileSize > 0 && (
                                        <p className="text-sm text-purple-300/70">
                                            Size: {(fileSize / 1024 / 1024).toFixed(2)} MB
                                        </p>
                                    )}
                                    
                                    {!fileName && (
                                        <p className="text-sm text-purple-300/70 mt-2">
                                            Maximum file size: 32MB
                                        </p>
                                    )}
                                </div>
                            ) : (
                                // Hash input UI
                                <div className="border-2 border-dashed p-8 rounded-xl flex flex-col items-center justify-center border-purple-500/30 bg-purple-500/5">
                                    <svg
                                        className="w-16 h-16 mb-4 text-purple-400/60"
                                        fill="none"
                                        stroke="currentColor"
                                        viewBox="0 0 24 24"
                                    >
                                        <path
                                            strokeLinecap="round"
                                            strokeLinejoin="round"
                                            strokeWidth={1.5}
                                            d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                                        />
                                    </svg>
                                    <p className="text-lg font-medium text-purple-300 mb-4">
                                        Enter a SHA-256 file hash
                                    </p>
                                    <input
                                        type="text"
                                        className="w-full px-4 py-3 rounded-lg bg-gray-800 border border-purple-500/30 text-white font-mono placeholder-gray-500 focus:outline-none focus:border-purple-500 focus:ring-1 focus:ring-purple-500"
                                        placeholder="Enter SHA-256 hash (64 characters)"
                                        value={fileHash}
                                        onChange={handleHashChange}
                                        disabled={loading}
                                        maxLength={64}
                                    />
                                    <p className="text-sm text-purple-300/70 mt-4 text-center">
                                        Hash lookup will search VirusTotal's database without uploading any file.
                                    </p>
                                </div>
                            )}
                            
                            {/* Progress bar */}
                            {loading && (
                                <div className="mt-6">
                                    <div className="flex justify-between mb-2">
                                        <span className="text-sm font-medium text-gray-300">{statusMessage}</span>
                                        <span className="text-sm font-medium text-gray-300">{progress}%</span>
                                    </div>
                                    <div className="w-full bg-gray-700 rounded-full h-2.5">
                                        <div 
                                            className="bg-gradient-to-r from-purple-600 to-blue-600 h-2.5 rounded-full transition-all duration-300" 
                                            style={{ width: `${progress}%` }}
                                        ></div>
                                    </div>
                                </div>
                            )}

                            <div className="flex flex-col sm:flex-row sm:justify-between items-center gap-4">
                                <button
                                    onClick={handleScan}
                                    disabled={loading || (scanMode === 'file' ? !file : !fileHash)}
                                    className={`w-full sm:w-auto px-6 py-4 bg-gradient-to-r from-purple-600 to-blue-600 text-white text-lg font-semibold rounded-xl shadow-lg hover:from-purple-700 hover:to-blue-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transition-all duration-300 disabled:opacity-70 disabled:cursor-not-allowed relative overflow-hidden ${
                                        loading || (scanMode === 'file' ? !file : !fileHash) ? 'opacity-50 cursor-not-allowed' : ''
                                    }`}
                                >
                                    <span className="relative z-10">
                                        {loading ? 'Scanning...' : `Scan ${scanMode === 'file' ? 'File' : 'Hash'}`}
                                    </span>
                                    {loading && (
                                        <div className="absolute inset-0 bg-purple-500/20 animate-[scan_1.5s_infinite]" />
                                    )}
                                    <style>{`
                                        @keyframes scan {
                                            0% { transform: translateX(-100%); }
                                            100% { transform: translateX(100%); }
                                        }
                                    `}</style>
                                </button>
                                
                                {loading && (
                                    <button
                                        onClick={handleCancel}
                                        disabled={cancelling}
                                        className={`w-full sm:w-auto px-6 py-4 bg-red-600 text-white text-lg font-semibold rounded-xl shadow-lg hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition-all duration-300 disabled:opacity-70 disabled:cursor-not-allowed ${cancelling ? 'opacity-50 cursor-not-allowed' : ''}`}
                                    >
                                        {cancelling ? 'Cancelling...' : 'Cancel Scan'}
                                    </button>
                                )}
                            </div>
                        </div>

                        {/* Result Display */}
                        {result && (
                            <motion.div
                                className={`mt-8 p-6 rounded-xl border shadow-md ${
                                    result.status === 'safe'
                                        ? 'bg-green-900/30 border-green-500/50'
                                        : result.status === 'unsafe'
                                        ? 'bg-red-900/30 border-red-500/50'
                                        : result.status === 'warning' 
                                        ? 'bg-yellow-900/30 border-yellow-500/50'
                                        : 'bg-gray-700/30 border-gray-500/50'
                                }`}
                                initial="hidden"
                                animate="visible"
                                variants={resultVariants}
                            >
                                <div className="flex items-center space-x-4">
                                    <svg
                                        className={`w-8 h-8 ${
                                            result.status === 'safe'
                                                ? 'text-green-400'
                                                : result.status === 'unsafe'
                                                ? 'text-red-400'
                                                : result.status === 'warning'
                                                ? 'text-yellow-400'
                                                : 'text-gray-400'
                                        }`}
                                        fill="none"
                                        stroke="currentColor"
                                        viewBox="0 0 24 24"
                                    >
                                        <path
                                            strokeLinecap="round"
                                            strokeLinejoin="round"
                                            strokeWidth={2}
                                            d={
                                                result.status === 'safe'
                                                    ? 'M5 13l4 4L19 7'
                                                    : result.status === 'unsafe'
                                                    ? 'M6 18L18 6M6 6l12 12'
                                                    : 'M12 9v3m0 3h.01'
                                            }
                                        />
                                    </svg>
                                    <div>
                                        <p
                                            className={`text-lg font-semibold ${
                                                result.status === 'safe'
                                                    ? 'text-green-300'
                                                    : result.status === 'unsafe'
                                                    ? 'text-red-300'
                                                    : result.status === 'warning'
                                                    ? 'text-yellow-300'
                                                    : 'text-gray-300'
                                            }`}
                                        >
                                            {result.message}
                                        </p>
                                        <div className="flex items-center mt-2 space-x-3">
                                            {scanTime && (
                                                <span className="text-sm text-purple-300">
                                                    Scan completed in {scanTime}s
                                                </span>
                                            )}
                                            {fromCache && (
                                                <span className="text-sm bg-purple-900/50 text-purple-300 px-2 py-0.5 rounded-full">
                                                    From cache
                                                </span>
                                            )}
                                        </div>
                                    </div>
                                </div>
                            </motion.div>
                        )}

                        {/* Scan Details */}
                        {scanData && (
                            <motion.div
                                className="mt-8 p-6 rounded-xl border border-purple-500/30 bg-gray-800/50 shadow-md"
                                initial="hidden"
                                animate="visible"
                                variants={resultVariants}
                            >
                                <h2 className="text-xl font-bold text-purple-300 mb-4">Scan Details</h2>
                                
                                {/* Detection Summary */}
                                {scanData.status !== 'not_found' && (
                                    <div className="mb-6 p-4 rounded-lg bg-gray-900/50">
                                        <div className="flex items-center justify-between">
                                            <h3 className="text-lg font-semibold text-white">Detection Summary</h3>
                                            <div className="flex items-center gap-2">
                                                <span className={`px-3 py-1 rounded-full text-sm font-medium ${
                                                    (scanData.stats.malicious || 0) > 0 
                                                        ? 'bg-red-900/50 text-red-300' 
                                                        : (scanData.stats.suspicious || 0) > 0
                                                            ? 'bg-yellow-900/50 text-yellow-300'
                                                            : 'bg-green-900/50 text-green-300'
                                                }`}>
                                                    {(scanData.stats.malicious || 0) > 0 
                                                        ? 'Malicious' 
                                                        : (scanData.stats.suspicious || 0) > 0
                                                            ? 'Suspicious'
                                                            : 'Safe'}
                                                </span>
                                            </div>
                                        </div>
                                        
                                        {/* Progress bar showing detection ratio */}
                                        <div className="mt-4">
                                            <div className="h-3 w-full bg-gray-700 rounded-full overflow-hidden flex">
                                                {/* Harmless */}
                                                {(scanData.stats.harmless || 0) > 0 && (
                                                    <div 
                                                        className="bg-green-500 h-full" 
                                                        style={{ width: `${(scanData.stats.harmless / Object.values(scanData.stats).reduce((a, b) => a + b, 0)) * 100}%` }}
                                                    ></div>
                                                )}
                                                {/* Undetected */}
                                                {(scanData.stats.undetected || 0) > 0 && (
                                                    <div 
                                                        className="bg-gray-500 h-full" 
                                                        style={{ width: `${(scanData.stats.undetected / Object.values(scanData.stats).reduce((a, b) => a + b, 0)) * 100}%` }}
                                                    ></div>
                                                )}
                                                {/* Suspicious */}
                                                {(scanData.stats.suspicious || 0) > 0 && (
                                                    <div 
                                                        className="bg-yellow-500 h-full" 
                                                        style={{ width: `${(scanData.stats.suspicious / Object.values(scanData.stats).reduce((a, b) => a + b, 0)) * 100}%` }}
                                                    ></div>
                                                )}
                                                {/* Malicious */}
                                                {(scanData.stats.malicious || 0) > 0 && (
                                                    <div 
                                                        className="bg-red-500 h-full" 
                                                        style={{ width: `${(scanData.stats.malicious / Object.values(scanData.stats).reduce((a, b) => a + b, 0)) * 100}%` }}
                                                    ></div>
                                                )}
                                            </div>
                                            
                                            <div className="mt-2 grid grid-cols-2 text-sm text-gray-300">
                                                <div className="space-y-1">
                                                    <div className="flex items-center">
                                                        <div className="w-3 h-3 bg-green-500 rounded-sm mr-2"></div>
                                                        <span>Harmless: {scanData.stats.harmless || 0}</span>
                                                    </div>
                                                    <div className="flex items-center">
                                                        <div className="w-3 h-3 bg-gray-500 rounded-sm mr-2"></div>
                                                        <span>Undetected: {scanData.stats.undetected || 0}</span>
                                                    </div>
                                                </div>
                                                <div className="space-y-1">
                                                    <div className="flex items-center">
                                                        <div className="w-3 h-3 bg-yellow-500 rounded-sm mr-2"></div>
                                                        <span>Suspicious: {scanData.stats.suspicious || 0}</span>
                                                    </div>
                                                    <div className="flex items-center">
                                                        <div className="w-3 h-3 bg-red-500 rounded-sm mr-2"></div>
                                                        <span>Malicious: {scanData.stats.malicious || 0}</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                )}
                                
                                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                                    <div className="bg-gray-700/30 p-4 rounded-lg">
                                        <h3 className="text-lg font-semibold text-white mb-2">Stats</h3>
                                        <div className="space-y-2">
                                            <div className="flex justify-between">
                                                <span className="text-green-300">Harmless:</span>
                                                <span className="font-mono">{scanData.stats.harmless || 0}</span>
                                            </div>
                                            <div className="flex justify-between">
                                                <span className="text-yellow-300">Suspicious:</span>
                                                <span className="font-mono">{scanData.stats.suspicious || 0}</span>
                                            </div>
                                            <div className="flex justify-between">
                                                <span className="text-red-300">Malicious:</span>
                                                <span className="font-mono">{scanData.stats.malicious || 0}</span>
                                            </div>
                                            <div className="flex justify-between">
                                                <span className="text-gray-300">Undetected:</span>
                                                <span className="font-mono">{scanData.stats.undetected || 0}</span>
                                            </div>
                                            <div className="flex justify-between pt-2 border-t border-gray-600">
                                                <span className="text-purple-300 font-semibold">Total Engines:</span>
                                                <span className="font-mono font-semibold">
                                                    {Object.values(scanData.stats).reduce((a, b) => a + b, 0)}
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div className="bg-gray-700/30 p-4 rounded-lg">
                                        <h3 className="text-lg font-semibold text-white mb-2">File Info</h3>
                                        <div className="space-y-2">
                                            <div className="flex justify-between">
                                                <span className="text-purple-300">Name:</span>
                                                <span className="font-mono truncate max-w-[180px]">{fileName}</span>
                                            </div>
                                            <div className="flex justify-between">
                                                <span className="text-purple-300">Size:</span>
                                                <span className="font-mono">{(fileSize / 1024 / 1024).toFixed(2)} MB</span>
                                            </div>
                                            {scanData.file_type && (
                                                <div className="flex justify-between">
                                                    <span className="text-purple-300">Type:</span>
                                                    <span className="font-mono">{scanData.file_type}</span>
                                                </div>
                                            )}
                                            {scanData.status && (
                                                <div className="flex justify-between">
                                                    <span className="text-purple-300">Status:</span>
                                                    <span className="font-mono capitalize">{scanData.status}</span>
                                                </div>
                                            )}
                                            {scanMode === 'hash' && (
                                                <div className="flex justify-between">
                                                    <span className="text-purple-300">Scan Method:</span>
                                                    <span className="font-mono">Hash Lookup</span>
                                                </div>
                                            )}
                                            {scanData.meta && scanData.meta.fileHash && (
                                                <div className="flex flex-col pt-2">
                                                    <span className="text-purple-300">SHA-256 Hash:</span>
                                                    <span className="font-mono text-xs break-all mt-1">{scanData.meta.fileHash}</span>
                                                </div>
                                            )}
                                        </div>
                                    </div>
                                </div>
                                
                                {/* Warning message for malicious or suspicious files */}
                                {(scanData.stats.malicious > 0 || scanData.stats.suspicious > 0) && (
                                    <div className={`mt-4 p-3 rounded ${
                                        scanData.stats.malicious > 0 
                                            ? 'bg-red-900/30 border border-red-500/30' 
                                            : 'bg-yellow-900/30 border border-yellow-500/30'
                                    }`}>
                                        <p className="text-sm">
                                            <span className="font-medium">
                                                {scanData.stats.malicious > 0 
                                                    ? 'Warning: This file contains malicious code!' 
                                                    : 'Caution: This file is flagged as suspicious.'}
                                            </span>
                                            {' '}Please take appropriate precautions before using this file.
                                        </p>
                                    </div>
                                )}
                                
                                {scanData.meta && scanData.meta.scan_id && (
                                    <div className="mt-4 text-xs text-gray-400">
                                        Scan ID: {scanData.meta.scan_id}
                                    </div>
                                )}
                                
                                {jobId && (
                                    <div className="mt-2 text-xs text-gray-400">
                                        Job ID: {jobId}
                                    </div>
                                )}
                            </motion.div>
                        )}
                    </div>
                </motion.div>
            </div>
        </div>
    );
} 