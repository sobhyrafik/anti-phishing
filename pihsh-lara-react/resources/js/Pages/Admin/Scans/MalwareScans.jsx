import React, { useState } from 'react';
import { Head } from '@inertiajs/react';
import AdminLayout from '@/Layouts/AdminLayout';
import { Link } from '@inertiajs/react';
import { 
    EyeIcon, 
    TrashIcon, 
    MagnifyingGlassIcon,
    FunnelIcon,
    ArrowDownTrayIcon,
    ChevronUpDownIcon,
    ChartBarIcon,
    DocumentIcon,
    CalendarDaysIcon,
    UserCircleIcon,
    ShieldCheckIcon,
    ShieldExclamationIcon
} from '@heroicons/react/24/outline';

export default function MalwareScans({ scans, stats }) {
    const [filterOpen, setFilterOpen] = useState(false);
    const [selectedStatus, setSelectedStatus] = useState('all');
    const [sortField, setSortField] = useState('created_at');
    const [sortDirection, setSortDirection] = useState('desc');

    const toggleSort = (field) => {
        if (sortField === field) {
            setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');
        } else {
            setSortField(field);
            setSortDirection('asc');
        }
    };

    return (
        <AdminLayout>
            <Head title="Malware Scans Management" />

            <div className="py-8">
                <div className="mx-auto max-w-7xl sm:px-6 lg:px-8">
                    <div className="overflow-hidden border border-gray-700 shadow-xl bg-gradient-to-br from-gray-900 to-gray-800 sm:rounded-xl">
                        <div className="p-8 text-gray-300">
                            {/* Header with actions */}
                            <div className="flex flex-col gap-4 mb-8 md:flex-row md:justify-between md:items-center">
                                <div>
                                    <h2 className="flex items-center text-2xl font-bold text-white">
                                        <DocumentIcon className="w-6 h-6 mr-2 text-cyan-400" />
                                        Malware Scans Management
                                    </h2>
                                    <p className="mt-1 text-gray-400">
                                        Manage and monitor all malware scan activities
                                    </p>
                                </div>
                                <div className="flex flex-col gap-3 sm:flex-row">
                                    <div className="relative">
                                        <input
                                            type="text"
                                            placeholder="Search scans..."
                                            className="w-full py-2 pl-10 pr-4 text-white bg-gray-800 border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-cyan-500 focus:border-transparent"
                                        />
                                        <MagnifyingGlassIcon className="h-5 w-5 text-gray-400 absolute left-3 top-2.5" />
                                    </div>
                                    <button 
                                        onClick={() => setFilterOpen(!filterOpen)}
                                        className="flex items-center justify-center px-4 py-2 text-gray-300 transition-colors duration-200 bg-gray-800 border border-gray-700 rounded-lg hover:border-cyan-500"
                                    >
                                        <FunnelIcon className="w-5 h-5 mr-2" />
                                        Filters
                                    </button>
                                    <button className="flex items-center justify-center px-4 py-2 text-white transition-colors duration-200 rounded-lg bg-cyan-600 hover:bg-cyan-700">
                                        <ArrowDownTrayIcon className="w-5 h-5 mr-2" />
                                        Export
                                    </button>
                                </div>
                            </div>

                            {/* Filter Panel */}
                            {filterOpen && (
                                <div className="p-4 mb-6 border border-gray-700 bg-gray-800/60 backdrop-blur-sm rounded-xl animate-fadeIn">
                                    <div className="grid grid-cols-1 gap-4 md:grid-cols-3">
                                        <div>
                                            <label className="block mb-1 text-sm font-medium text-gray-400">Status</label>
                                            <select 
                                                className="w-full px-3 py-2 text-white bg-gray-700 border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-cyan-500"
                                                value={selectedStatus}
                                                onChange={(e) => setSelectedStatus(e.target.value)}
                                            >
                                                <option value="all">All Statuses</option>
                                                <option value="safe">Clean</option>
                                                <option value="suspicious">Suspicious</option>
                                                <option value="malicious">Infected</option>
                                            </select>
                                        </div>
                                        <div>
                                            <label className="block mb-1 text-sm font-medium text-gray-400">Date Range</label>
                                            <select className="w-full px-3 py-2 text-white bg-gray-700 border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-cyan-500">
                                                <option>Last 7 Days</option>
                                                <option>Last 30 Days</option>
                                                <option>Last 90 Days</option>
                                                <option>Custom Range</option>
                                            </select>
                                        </div>
                                        <div>
                                            <label className="block mb-1 text-sm font-medium text-gray-400">User</label>
                                            <select className="w-full px-3 py-2 text-white bg-gray-700 border border-gray-600 rounded-lg focus:outline-none focus:ring-2 focus:ring-cyan-500">
                                                <option>All Users</option>
                                                <option>Active Users</option>
                                                <option>Admin Users</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div className="flex justify-end mt-4">
                                        <button className="px-4 py-2 mr-3 text-gray-300 transition-colors duration-200 hover:text-white">
                                            Reset
                                        </button>
                                        <button className="px-4 py-2 text-white transition-colors duration-200 rounded-lg bg-cyan-600 hover:bg-cyan-700">
                                            Apply Filters
                                        </button>
                                    </div>
                                </div>
                            )}

                            {/* Stats Grid */}
                            <div className="grid grid-cols-1 gap-6 mb-8 sm:grid-cols-2 lg:grid-cols-4">
                                <div className="p-6 transition-all duration-300 border border-gray-700 bg-gray-800/60 backdrop-blur-sm rounded-xl hover:border-cyan-500/50 hover:shadow-lg">
                                    <div className="flex items-center justify-between">
                                        <div>
                                            <h3 className="text-sm font-medium text-gray-400">Total Scans</h3>
                                            <p className="mt-2 text-3xl font-bold text-white">{stats.total.toLocaleString()}</p>
                                        </div>
                                        <div className="p-3 rounded-full bg-gradient-to-br from-cyan-500/20 to-blue-500/10">
                                            <ChartBarIcon className="w-6 h-6 text-cyan-400" />
                                        </div>
                                    </div>
                                </div>
                                <div className="p-6 transition-all duration-300 border border-gray-700 bg-gray-800/60 backdrop-blur-sm rounded-xl hover:border-red-500/50 hover:shadow-lg">
                                    <div className="flex items-center justify-between">
                                        <div>
                                            <h3 className="text-sm font-medium text-gray-400">Infected</h3>
                                            <p className="mt-2 text-3xl font-bold text-red-400">{stats.malicious.toLocaleString()}</p>
                                        </div>
                                        <div className="p-3 rounded-full bg-gradient-to-br from-red-500/20 to-red-700/10">
                                            <ShieldExclamationIcon className="w-6 h-6 text-red-400" />
                                        </div>
                                    </div>
                                    <div className="mt-4">
                                        <div className="w-full bg-gray-700 rounded-full h-2.5">
                                            <div className="bg-red-500 h-2.5 rounded-full" style={{ width: `${(stats.malicious / stats.total) * 100}%` }}></div>
                                        </div>
                                        <p className="mt-1 text-xs text-gray-400">{((stats.malicious / stats.total) * 100).toFixed(1)}% of total scans</p>
                                    </div>
                                </div>
                                <div className="p-6 transition-all duration-300 border border-gray-700 bg-gray-800/60 backdrop-blur-sm rounded-xl hover:border-yellow-500/50 hover:shadow-lg">
                                    <div className="flex items-center justify-between">
                                        <div>
                                            <h3 className="text-sm font-medium text-gray-400">Suspicious</h3>
                                            <p className="mt-2 text-3xl font-bold text-yellow-400">{stats.suspicious.toLocaleString()}</p>
                                        </div>
                                        <div className="p-3 rounded-full bg-gradient-to-br from-yellow-500/20 to-yellow-700/10">
                                            <ShieldExclamationIcon className="w-6 h-6 text-yellow-400" />
                                        </div>
                                    </div>
                                    <div className="mt-4">
                                        <div className="w-full bg-gray-700 rounded-full h-2.5">
                                            <div className="bg-yellow-500 h-2.5 rounded-full" style={{ width: `${(stats.suspicious / stats.total) * 100}%` }}></div>
                                        </div>
                                        <p className="mt-1 text-xs text-gray-400">{((stats.suspicious / stats.total) * 100).toFixed(1)}% of total scans</p>
                                    </div>
                                </div>
                                <div className="p-6 transition-all duration-300 border border-gray-700 bg-gray-800/60 backdrop-blur-sm rounded-xl hover:border-green-500/50 hover:shadow-lg">
                                    <div className="flex items-center justify-between">
                                        <div>
                                            <h3 className="text-sm font-medium text-gray-400">Clean</h3>
                                            <p className="mt-2 text-3xl font-bold text-green-400">{stats.safe.toLocaleString()}</p>
                                        </div>
                                        <div className="p-3 rounded-full bg-gradient-to-br from-green-500/20 to-green-700/10">
                                            <ShieldCheckIcon className="w-6 h-6 text-green-400" />
                                        </div>
                                    </div>
                                    <div className="mt-4">
                                        <div className="w-full bg-gray-700 rounded-full h-2.5">
                                            <div className="bg-green-500 h-2.5 rounded-full" style={{ width: `${(stats.safe / stats.total) * 100}%` }}></div>
                                        </div>
                                        <p className="mt-1 text-xs text-gray-400">{((stats.safe / stats.total) * 100).toFixed(1)}% of total scans</p>
                                    </div>
                                </div>
                            </div>

                            {/* Scans Table */}
                            <div className="mb-6 overflow-hidden border border-gray-700 bg-gray-800/40 backdrop-blur-sm rounded-xl">
                                <div className="overflow-x-auto">
                                    <table className="min-w-full divide-y divide-gray-700/50">
                                        <thead className="bg-gray-700/30">
                                            <tr>
                                                <th 
                                                    className="px-6 py-4 text-xs font-medium tracking-wider text-left text-gray-300 uppercase transition-colors cursor-pointer hover:text-cyan-400"
                                                    onClick={() => toggleSort('filename')}
                                                >
                                                    <div className="flex items-center">
                                                        <DocumentIcon className="w-4 h-4 mr-1" />
                                                        File Name
                                                        <ChevronUpDownIcon className="w-4 h-4 ml-1" />
                                                    </div>
                                                </th>
                                                <th 
                                                    className="px-6 py-4 text-xs font-medium tracking-wider text-left text-gray-300 uppercase transition-colors cursor-pointer hover:text-cyan-400"
                                                    onClick={() => toggleSort('user')}
                                                >
                                                    <div className="flex items-center">
                                                        <UserCircleIcon className="w-4 h-4 mr-1" />
                                                        User
                                                        <ChevronUpDownIcon className="w-4 h-4 ml-1" />
                                                    </div>
                                                </th>
                                                <th 
                                                    className="px-6 py-4 text-xs font-medium tracking-wider text-left text-gray-300 uppercase transition-colors cursor-pointer hover:text-cyan-400"
                                                    onClick={() => toggleSort('status')}
                                                >
                                                    <div className="flex items-center">
                                                        <ShieldCheckIcon className="w-4 h-4 mr-1" />
                                                        Status
                                                        <ChevronUpDownIcon className="w-4 h-4 ml-1" />
                                                    </div>
                                                </th>
                                                <th 
                                                    className="px-6 py-4 text-xs font-medium tracking-wider text-left text-gray-300 uppercase transition-colors cursor-pointer hover:text-cyan-400"
                                                    onClick={() => toggleSort('created_at')}
                                                >
                                                    <div className="flex items-center">
                                                        <CalendarDaysIcon className="w-4 h-4 mr-1" />
                                                        Date
                                                        <ChevronUpDownIcon className="w-4 h-4 ml-1" />
                                                    </div>
                                                </th>
                                                <th className="px-6 py-4 text-xs font-medium tracking-wider text-left text-gray-300 uppercase">
                                                    Actions
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody className="divide-y divide-gray-700/30">
                                            {scans.data.map((scan) => (
                                                <tr key={scan.id} className="transition-colors duration-150 hover:bg-gray-700/20">
                                                    <td className="px-6 py-4 whitespace-nowrap">
                                                        <div className="max-w-xs text-sm font-medium text-gray-300 truncate">{scan.filename}</div>
                                                        <div className="mt-1 text-xs text-gray-500">ID: #{scan.id}</div>
                                                    </td>
                                                    <td className="px-6 py-4 whitespace-nowrap">
                                                        <div className="flex items-center">
                                                            <div className="flex items-center justify-center w-8 h-8 mr-3 bg-gray-700 rounded-full text-cyan-400">
                                                                {scan.user.name.charAt(0).toUpperCase()}
                                                            </div>
                                                            <div>
                                                                <div className="text-sm font-medium text-gray-300">{scan.user.name}</div>
                                                                <div className="text-xs text-gray-500">{scan.user.email}</div>
                                                            </div>
                                                        </div>
                                                    </td>
                                                    <td className="px-6 py-4 whitespace-nowrap">
                                                        <span className={`px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full ${
                                                            scan.is_malicious
                                                                ? 'bg-red-900/30 text-red-300 border border-red-700/50' 
                                                                : scan.is_suspicious
                                                                ? 'bg-yellow-900/30 text-yellow-300 border border-yellow-700/50'
                                                                : 'bg-green-900/30 text-green-300 border border-green-700/50'
                                                        }`}>
                                                            {scan.is_malicious ? 'Infected' : scan.is_suspicious ? 'Suspicious' : 'Clean'}
                                                        </span>
                                                        {scan.scan_score && (
                                                            <div className="mt-1 text-xs text-gray-400">Score: {scan.scan_score}/100</div>
                                                        )}
                                                    </td>
                                                    <td className="px-6 py-4 whitespace-nowrap">
                                                        <div className="text-sm text-gray-300">
                                                            {new Date(scan.created_at).toLocaleDateString()}
                                                        </div>
                                                        <div className="text-xs text-gray-500">
                                                            {new Date(scan.created_at).toLocaleTimeString()}
                                                        </div>
                                                    </td>
                                                    <td className="px-6 py-4 text-sm font-medium whitespace-nowrap">
                                                        <div className="flex items-center space-x-2">
                                                            <Link
                                                                href={route('admin.scans.malware.show', scan.id)}
                                                                className="p-2 transition-colors rounded-lg text-cyan-400 hover:text-cyan-300 hover:bg-cyan-900/20"
                                                            >
                                                                <EyeIcon className="w-5 h-5" />
                                                            </Link>
                                                            <Link
                                                                href={route('admin.scans.malware.delete', scan.id)}
                                                                method="delete"
                                                                as="button"
                                                                className="p-2 text-red-400 transition-colors rounded-lg hover:text-red-300 hover:bg-red-900/20"
                                                            >
                                                                <TrashIcon className="w-5 h-5" />
                                                            </Link>
                                                        </div>
                                                    </td>
                                                </tr>
                                            ))}
                                        </tbody>
                                    </table>
                                </div>
                            </div>

                            {/* Pagination */}
                            <div className="flex flex-col items-center justify-between mt-6 sm:flex-row">
                                <div className="mb-4 text-sm text-gray-400 sm:mb-0">
                                    Showing <span className="font-medium text-white">{scans.from}</span> to <span className="font-medium text-white">{scans.to}</span> of <span className="font-medium text-white">{scans.total}</span> results
                                </div>
                                {scans.links && (
                                    <div className="flex justify-center">
                                        {scans.links.map((link, index) => (
                                            <Link
                                                key={index}
                                                href={link.url || '#'}
                                                className={`px-4 py-2 mx-1 rounded-md ${
                                                    link.active
                                                        ? 'bg-cyan-600 text-white'
                                                        : link.url === null
                                                        ? 'bg-gray-700/50 text-gray-500 cursor-not-allowed'
                                                        : 'bg-gray-700 text-gray-300 hover:bg-gray-600'
                                                }`}
                                                dangerouslySetInnerHTML={{ __html: link.label }}
                                            />
                                        ))}
                                    </div>
                                )}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </AdminLayout>
    );
} 